version: "3.5"

networks:
  ouroboros:

services:
  ouroboros:
    # -u: allow self update
    command: --self-update --swarm --labels-enable --labels-only
    deploy:
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        - com.ouroboros.enable=true
      # Big services will need this modified or removed.
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    #image: ${image_provider:-scififarms}/technocore-ouroboros:${TAG:-latest}
    image: pyouroboros/ouroboros:latest
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    networks:
      - ouroboros
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  ouroboros-technocore:
    command: deploy && sleep infinity 
    deploy:
      mode: global
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        - com.ouroboros.enable=true
      # Big services will need this modified or removed.
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    environment:
      #- GF_SERVER_DOMAIN=grafana.${DOMAIN}
      - SERVER_HOSTNAME=${HOSTNAME}
      - HOST_SERVICES_DIR=${TECHNOCORE_SERVICES}
    image: ${image_provider:-scififarms}/technocore:${TAG:-latest}
    logging:
      driver: "${LOGGING_DRIVER}"
      options:
        tag: "{{.Name}}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $(pwd)/.env:/var/lib/technocore/.env 
